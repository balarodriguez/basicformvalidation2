{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/user.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAEvD,IAAM,MAAM,GAAW,EAAE,CAAC;AAM1B;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACT7B,yBAAyB,+BAA+B,KAAK,+CAA+C,uR;;;;;;;;;;;ACA5G,kIAAkI,uBAAuB,0DAA0D,iBAAiB,uzBAAuzB,GAAG,m6BAAm6B,OAAO,okC;;;;;;;;;;;;;;;;;;ACA95D;AACZ;AAO9B;IALA;QAMA,WAAM,GAAC,CAAC,SAAS,EAAC,OAAO,EAAC,KAAK,CAAC,CAAC;QACjC,kBAAa,GAAC,IAAI,CAAC;QAEnB,cAAS,GAAC,IAAI,0CAAI,CAAC,EAAE,EAAC,eAAe,EAAC,UAAU,EAAC,EAAE,EAAC,SAAS,EAAC,IAAI,CAAC,CAAC;IAcpE,CAAC;IAXD,qCAAc,GAAd,UAAe,KAAK;QAElB,IAAG,KAAK,KAAG,SAAS,EAAC;YACnB,IAAI,CAAC,aAAa,GAAC,IAAI,CAAC;SACzB;aAED;YACE,IAAI,CAAC,aAAa,GAAC,KAAK,CAAC;SAC1B;IACH,CAAC;IAhBY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OACW,YAAY,CAkBxB;IAAD,mBAAC;CAAA;AAlBwB;;;;;;;;;;;;;;;;;;;;;;ACRiC;AACjB;AACE;AACa;AACT;AAc/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAZrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,0DAAW;aACZ;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;AClBtB;AAAA;AAAA;IACI,cACW,IAAY,EACZ,KAAa,EACb,KAAY,EACZ,MAAa,EACb,eAAsB,EACtB,KAAa;QALb,SAAI,GAAJ,IAAI,CAAQ;QACZ,UAAK,GAAL,KAAK,CAAQ;QACb,UAAK,GAAL,KAAK,CAAO;QACZ,WAAM,GAAN,MAAM,CAAO;QACb,oBAAe,GAAf,eAAe,CAAO;QACtB,UAAK,GAAL,KAAK,CAAQ;IAGnB,CAAC;IACV,WAAC;AAAD,CAAC;;;;;;;;;;;;;;ACXD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".error{\\r\\n    background-color: aqua;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxzQkFBc0I7QUFDMUIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5lcnJvcntcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGFxdWE7XHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Basic Form Validation 2</h1>\\n  <form #userForm=\\\"ngForm\\\">\\n\\n    <!--{{userForm.value | json}}\\n        property binding in form....\\n\\n    <hr>\\n    {{userModel |json}}\\n-->\\n\\n    <div class=\\\"form-group\\\">\\n      <label>Name</label>\\n      <input type=\\\"text\\\" required #name=\\\"ngModel\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"name.invalid && name.touched\\\" name=\\\"Username\\\" [ngModel]=\\\" \\\">\\n      <small class=\\\"error\\\" [class.d-none]=\\\"name.valid || name.untouched\\\">Name is required</small>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Email</label>\\n      <input type=\\\"email\\\" required #email=\\\"ngModel\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"email.invalid && email.touched\\\" name=\\\"email\\\" [ngModel]=\\\" \\\">\\n      <small class=\\\"error\\\" [class.d-none]=\\\"email.valid || email.untouched\\\">Email is required</small>\\n\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Phone</label>\\n      <input type=\\\"tel\\\" required #phone=\\\"ngModel\\\" pattern=\\\"^\\\\d{10}$\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"phone.invalid && phone.touched\\\" name=\\\"phone\\\" [ngModel]=\\\" \\\">\\n      <!--<small class=\\\"error\\\" [class.d-none]=\\\"phone.valid || phone.untouched\\\">Phone is required</small>-->\\n      <div *ngIf=\\\"phone.errors && (phone.invalid || phone.touched)\\\">\\n        <small class=\\\"error\\\" *ngIf=\\\"phone.errors.required\\\">Phone number is required</small>\\n        <small class=\\\"error\\\" *ngIf=\\\"phone.errors.pattern\\\">Phone number must be 10 digits</small>\\n\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <select (blur)=\\\"validateCourse(course.value)\\\" (change)=\\\"validateCourse(course.value)\\\" class=\\\"custom-select\\\" required #course=\\\"ngModel\\\" [class.is-invalid]=\\\"\\\" name=\\\"course\\\" [ngModel]=\\\" \\\" [class.is-invalid]=\\\"topicHasError && course.touched\\\">\\n        <option value=\\\"default\\\" selected>None</option>\\n        <option *ngFor=\\\"let topic of topics\\\">{{topic}}</option>\\n      </select>\\n      <small [class.d-none]=\\\"!topicHasError || course.untouched\\\">Please choose a course </small>\\n\\n    </div>\\n\\n    <div class=\\\"mb-3\\\">\\n      <label> Time preference </label>\\n      <div class=\\\"form-check\\\">\\n        <input class=\\\"form-check-input\\\" [ngModel]=\\\"userModel.timePreference\\\" type=\\\"radio\\\" name=\\\"timePreference\\\" value=\\\"morning\\\">\\n        <label class=\\\"form-check-label\\\">Morning(9AM -12PM)</label>  \\n      </div>\\n\\n      <div class=\\\"form-check\\\">\\n        <input class=\\\"form-check-input\\\" [ngModel]=\\\"userModel.timePreference\\\" type=\\\"radio\\\" name=\\\"timePreference\\\" value=\\\"evening\\\">\\n        <label class=\\\"form-check-label\\\">Evening(5PM-8PM)</label>\\n      </div>\\n    </div>\\n\\n\\n    <div class=\\\"form-check mb-3\\\">\\n      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" name=\\\"offer\\\" [ngModel]=\\\"userModel.offer\\\">\\n      <label class=\\\"form-check-label\\\">\\n        Send me Promotional Offers\\n      </label>\\n\\n    </div>\\n\\n\\n    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Submit form</button>\\n  </form>\\n</div>\"","import { Component } from '@angular/core';\nimport { User } from './user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\ntopics=['Angular','React','Vue'];\ntopicHasError=true;\n\nuserModel=new User('',\"rob@gmail.com\",9629044576,\"\",\"morning\",true);\n\n\nvalidateCourse(value)\n{\n  if(value==='default'){\n    this.topicHasError=true;\n  }\n  else\n  {\n    this.topicHasError=false;\n  }\n}\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class User {\n    constructor(\n        public name: string,\n        public email: string,\n        public phone:number,\n        public course:string,\n        public timePreferences:string,\n        public offer:boolean\n    )\n        \n        {}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}